<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABMLAAATCwAAAAAAAAAA
        AAD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAACY5AG9IYwC8AQEABwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOXFxcmZ6e
        ntUnJydlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAADJedwC36P8A/5LKAP0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKCgoZK+v
        r+n///////////////9/f3+/BAQEOgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAA07TACMp9cA/+H/AP///wD/fq4A9QAAAAAAAAAAAAAAAAAAAAAAAAAABgYGPIKC
        gsH////////////////////////////////e3t7/VFRUlAAAABMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAbJQBhiK0A59T/AP/q/wD/3f8A/5rFAPooOABzAAAAAAAAAAAAAAAAAAAAFVdX
        V5fg4OD/////////////////h4eHw0JCQoC3t7fv////////////////tra27iwsLGkAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAABAA4ZoAAwML9AP/p/wD/5f8A/7XrAP9UawCrAAAAIQAAAAAAAAAAAAAAAC8v
        L2y4uLjw////////////////vLy88zU1NXMAAAAAAAAAAAAAABVcXFyc39/f/////////////////4mJ
        icgKCgpAAAAAAAAAAAAAAAAVPVQAlKrcAP/l/wD/6/8A/8v/AP92lgDTChAASQAAAAAAAAAAAAAAAAwM
        DEOMjIzK////////////////4uLi/2BgYKAAAAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAFBQU7iIiIxv//
        /////////////+Pj4/9cXFydAAAAG2yWAOTh/wD/5P8A/9f/AP+LswDrJzQAbAAAAAAAAAAAAAAAAAAA
        AAAZGRlG5ubm////////////+fn5/4CAgLwHBwc7AAAAAAAAAAAAAAAAIzEAehwnAFoAAAAAAAAAAAAA
        AAAAAAAAKCgoX6Wlpd////////////////+jo6PpmdQA/+n/AP+w5QD6QVIAkwAAABEAAAAAAAAAAAAA
        AAAAAAAAAAAAACwsLGP//////////7a2tuAfHx9bAAAAAAAAAAAAAAAADBAAMWyNAMfU/wD/NkoAfwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAABkVFRYXc3Nz3/////+Li4v+IvADy+P8A/3OjAOMAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAJiYmWP//////////QkJCggAAAAAAAAAAAAAAAAAAAAA7UACT9P8A/9T/
        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
        ////////rq6u6CYmJmIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHNUUAhKLQ
        AP/f/wD/5f8A/8f/AP/V/wD/6f8A/8T/AP9ogwDCAgYAPAAAAAAAAAAAAAAAAAAAAAAAAAAAnp6e5v//
        ////////2NjY/01NTY0AAAANAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAALFhwALC+9AD/7/8A/9v/AP+LsADqHikAZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAC4uLjs/////3h4eLgAAAAzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAABEaAFWAlgDUSmAAngAAAA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAABFlZWbQ8PDxzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A//////////////////////+P4f/+H8B/+B8AH/AcAA/AOAwDAOAfAAPA
        c8AHwcPgH8PD+B/Dw/gPw8P4D8PD+A/Dw/gPw8P4D8PD+B/Dw/gfw8P4B8OD4APOA8AA+AcAwDAcA/AA
        OA/4APgf/gP4f/+H8f////////////////8=
</value>
  </data>
</root>